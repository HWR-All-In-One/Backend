name: Makefile CI

on:
  push:
    branches: [ "main", "dev", "feature/HAIO-96/CI_CD_einrichten_BE-2" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main", "dev", "feature/HAIO-96/CI_CD_einrichten_BE-2" ]

jobs:    
  build-Docker:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Branchname
        run: |
          echo "GIT_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
          echo "GIT_BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
      -
        name: Checkout
        uses: actions/checkout@v3
     
     - 
        uses: paulhatch/semantic-version@v5.0.2
        with:
        # The prefix to use to identify tags
        tag_prefix: "v"
        # A string which, if present in a git commit, indicates that a change represents a
        # major (breaking) change, supports regular expressions wrapped with '/'
        major_pattern: "(MAJOR)"
        # A string which indicates the flags used by the `major_pattern` regular expression. Supported flags: idgs
        major_regexp_flags: ""
        # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
        minor_pattern: "(MINOR)"
        # A string which indicates the flags used by the `minor_pattern` regular expression. Supported flags: idgs
        minor_regexp_flags: ""
        # A string to determine the format of the version output
        version_format: "${major}.${minor}.${patch}-prerelease${increment}"
        # Optional path to check for changes. If any changes are detected in the path the
        # 'changed' output will true. Enter multiple paths separated by spaces.
        #change_path: "src/my-service"
        # Named version, will be used as suffix for name version tag
        namespace: hwr-aio-backend
        # If this is set to true, *every* commit will be treated as a new version.
        bump_each_commit: false
        # If true, the body of commits will also be searched for major/minor patterns to determine the version type.
        search_commit_body: false
        # The output method used to generate list of users, 'csv' or 'json'.
        user_format_type: "csv"
        # Prevents pre-v1.0.0 version from automatically incrementing the major version.
        # If enabled, when the major version is 0, major releases will be treated as minor and minor as patch. Note that the version_type output is unchanged.
        enable_prerelease_mode: true
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/hwr-all-in-one/backend
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      
      -
        name: Login to GitHub Package Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }} 
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
