name: Makefile CI

# Vars:
# DEV_BRANCH = feature/HAIO-96/CI_CD_einrichten_BE-2_Test

on:
  #push:
  #  branches: [ "main", "dev", "feature/HAIO-96/CI_CD_einrichten_BE-2" ]
  #  tags:
  #    - 'v*'
  pull_request:
    branches: [ "main", "dev", "feature/HAIO-96/CI_CD_einrichten_BE-2", "feature/HAIO-96/CI_CD_einrichten_BE-2_Test" ]
    types: [closed]

jobs:
  versiontag-dev:
    runs-on: ubuntu-latest
    if: |
      github.event.pull_request.merged && 
      github.base_ref == 'feature/HAIO-96/CI_CD_einrichten_BE-2_Test'
    steps:
      -
        name: versiontag
        run: |
          echo "Dev"
      - 
        uses: actions/checkout@v2
      -
        name: use-bash
        run: |
          chmod +x ./scripts/action_versionnr.sh
          bash ./scripts/action_versionnr.sh "$GITHUB_HEAD_REF" "$GITHUB_BASE_REF" "${{vars.MAIN_BRANCH}}" "${{vars.DEV_BRANCH}}" "${{vars.FEATURE_TAG_IN_BRANCH}}" "${{vars.SUBFEATURE_TAG_IN_BRANCH}}" "${{vars.BUG_TAG_IN_BRANCH}}" "${{vars.BACKEND_VERSION_MAIN_MAJOR}}" "${{vars.BACKEND_VERSION_MAIN_MINOR}}" "${{vars.BACKEND_VERSION_MAIN_PATCH}}" "${{vars.BACKEND_VERSION_MAIN_BUILD}}" "${{vars.BACKEND_VERSION_DEV_MAJOR}}" "${{vars.BACKEND_VERSION_DEV_MINOR}}" "${{vars.BACKEND_VERSION_DEV_PATCH}}" "${{vars.BACKEND_VERSION_DEV_BUILD}}" "${{vars.BACKEND_VERSION_DEV_NR}}" "${{ github.run_number }}" >> $GITHUB_ENV
      -
        name: output-bash-env
        run: |
          echo ${{ env.VERSION_MAIN_MAJOR }}
          echo ${{ env.VERSION_MAIN_MINOR }}
          echo ${{ env.VERSION_MAIN_Patch }}
          echo ${{ env.VERSION_MAIN_BUILD }}
          echo ${{ env.VERSION_DEV_MAJOR }}
          echo ${{ env.VERSION_DEV_MINOR }}
          echo ${{ env.VERSION_DEV_Patch }}
          echo ${{ env.VERSION_DEV_BUILD }}
          echo ${{ env.VERSION_DEV_NR }}
      #-
      #  name: Update repository variables
      #  run: | 
      #    vars.BACKEND_VERSION_MAIN_MAJOR=$env.VERSION_MAIN_MAJOR
      #    vars.BACKEND_VERSION_DEV_BUILD=$env.VERSION_DEV_BUILD
      - 
        uses: octokit/request-action@v2.x
        id: get_latest_release
        with:
          route: PATCH /repos/HWR-All-In-One/{repo}/actions/variables/VERSION_DEV_BUILD
          owner: octokit
          repo: request-action
          check_run_id: ${{ fromJson(env.VERSION_DEV_BUILD).id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - 
        name: Print repository variables
        run: |
          echo ${{ vars.BACKEND_VERSION_MAIN_MAJOR }}
          echo ${{ vars.BACKEND_VERSION_DEV_BUILD }}
      - 
        name: Versiontag-dev
        if: ${{ github.base_ref == 'feature/HAIO-96/CI_CD_einrichten_BE-2_Test' }}
        run: |
          echo "Hi, ich bin es"
  build-Docker:
    runs-on: ubuntu-latest

    if: github.event.pull_request.merged

    steps:
      - 
        name: Branchname
        run: |
          echo "GIT_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
          echo "GIT_BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo HEAD_REF: $GITHUB_HEAD_REF
          echo BASE_REF: $GITHUB_BASE_REF
          echo dev: ${{vars.DEV_BRANCH}}
        # example for $GITHUB_HEAD_REF and $GITHUB_BASE_REF:
        # When you merge from "feature/HAIO-96/CI_CD_einrichten_BE-2" to "feature/HAIO-96/CI_CD_einrichten_BE-2_Test"
        # HEAD_REF: feature/HAIO-96/CI_CD_einrichten_BE-2
        # BASE_REF: feature/HAIO-96/CI_CD_einrichten_BE-2_Test
      -
        name: Checkout
        uses: actions/checkout@v3