name: Update Version File

on:
  pull_request:
    branches: [ "main", "dev", "feature/HAIO-96/CI_CD_einrichten_BE-2", "feature/HAIO-96/CI_CD_einrichten_BE-2_Test" ]
    types: [closed]

jobs:
  versiontag:
    runs-on: ubuntu-latest
    if: |
      github.event.pull_request.merged && 
      github.base_ref == 'feature/HAIO-96/CI_CD_einrichten_BE-2_Test'
    steps:
      -
        name: versiontag
        run: |
          echo "Dev"
      - 
        uses: actions/checkout@v2
      -
        name: use-bash
        run: |
          chmod +x ./scripts/action_versionnr.sh
          bash ./scripts/action_versionnr.sh "$GITHUB_HEAD_REF" "$GITHUB_BASE_REF" "${{vars.MAIN_BRANCH}}" "${{vars.DEV_BRANCH}}" "${{vars.FEATURE_TAG_IN_BRANCH}}" "${{vars.SUBFEATURE_TAG_IN_BRANCH}}" "${{vars.BUG_TAG_IN_BRANCH}}" "${{vars.BACKEND_VERSION_MAIN_MAJOR}}" "${{vars.BACKEND_VERSION_MAIN_MINOR}}" "${{vars.BACKEND_VERSION_MAIN_PATCH}}" "${{vars.BACKEND_VERSION_MAIN_BUILD}}" "${{vars.BACKEND_VERSION_DEV_MAJOR}}" "${{vars.BACKEND_VERSION_DEV_MINOR}}" "${{vars.BACKEND_VERSION_DEV_PATCH}}" "${{vars.BACKEND_VERSION_DEV_BUILD}}" "${{vars.BACKEND_VERSION_DEV_NR}}" "${{ github.run_number }}" >> $GITHUB_ENV
      -
        name: output-bash-env
        run: |
          echo ${{ env.VERSION_MAIN_MAJOR }}
          echo ${{ env.VERSION_MAIN_MINOR }}
          echo ${{ env.VERSION_MAIN_Patch }}
          echo ${{ env.VERSION_MAIN_BUILD }}
          echo ${{ env.VERSION_DEV_MAJOR }}
          echo ${{ env.VERSION_DEV_MINOR }}
          echo ${{ env.VERSION_DEV_Patch }}
          echo ${{ env.VERSION_DEV_BUILD }}
          echo ${{ env.VERSION_DEV_NR }}
      #-
      #  name: Update repository variables
      #  run: | 
      #    vars.BACKEND_VERSION_MAIN_MAJOR=$env.VERSION_MAIN_MAJOR
      #    vars.BACKEND_VERSION_DEV_BUILD=$env.VERSION_DEV_BUILD
      - 
        name: Print repository variables
        run: |
          echo ${{ vars.BACKEND_VERSION_MAIN_MAJOR }}
          echo ${{ vars.BACKEND_VERSION_DEV_BUILD }}
      - 
        name: Overwrite file
        uses: "DamianReeves/write-file-action@master"
        with:
          path: ./version.json
          write-mode: overwrite
          contents: |
            {"VERSION_MAIN_MAJOR": ${{ env.VERSION_MAIN_MAJOR }}, "VERSION_MAIN_MINOR": ${{ env.VERSION_MAIN_MINOR }}, "VERSION_MAIN_Patch": ${{ env.VERSION_MAIN_Patch }}, "VERSION_MAIN_BUILD": ${{ env.VERSION_MAIN_BUILD }}, "VERSION_DEV_MAJOR": ${{ env.VERSION_DEV_MAJOR }}, "VERSION_DEV_MINOR": ${{ env.VERSION_DEV_MINOR }}, "VERSION_DEV_Patch": ${{ env.VERSION_DEV_Patch }}, "VERSION_DEV_BUILD": ${{ env.VERSION_DEV_BUILD }}, "VERSION_DEV_NR": ${{ env.VERSION_DEV_NR }}}
      - 
        name: Commit & Push
        uses: Andro999b/push@v1.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: feature/HAIO-96/CI_CD_einrichten_BE-2_Test
          force: true
          message: 'Update Version by Github Actions'
      - 
        name: Versiontag-dev
        if: ${{ github.base_ref == 'feature/HAIO-96/CI_CD_einrichten_BE-2_Test' }}
        run: |
          echo "Hi, ich bin es"
    read:
      runs-on: ubuntu-latest
        
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3
          with:
            ref: $GITHUB_BASE_REF

        - name: Read package.json
          id: package
          uses: juliangruber/read-file-action@v1
          with:
            path: ./version.json
        - name: Echo package.json
          run: echo "${{ steps.package.outputs.content }}"